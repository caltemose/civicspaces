// Generated by CoffeeScript 1.6.3
(function() {
  var Map;

  Map = (function() {
    Map.defaultLat = 33.7811643;

    Map.defaultLng = -84.38362970000003;

    function Map(container, lat, lng, marker, zoom) {
      var options;
      this.container = $(container);
      this.markers = [];
      options = {
        center: this.makeLatLng(lat, lng),
        zoom: zoom
      };
      this.googlemap = new google.maps.Map(this.container[0], options);
      if (marker) {
        this.addMarker(lat, lng, marker.label, marker.infoHtml);
      }
    }

    Map.prototype.defaults = function() {
      this.defaultLat = 33.7811643;
      this.defaultLng = -84.38362970000003;
      return this.markers = [];
    };

    Map.prototype.initInfoWindow = function() {
      if (!this.infoWindow) {
        return this.infoWindow = new google.maps.InfoWindow({
          content: 'default'
        });
      }
    };

    Map.prototype.addMarker = function(lat, lng, label, infoHtml) {
      var iw, map, marker, options;
      if (label == null) {
        label = 'unlabeled marker';
      }
      this.initInfoWindow();
      options = this.makeMarkerOptions(lat, lng, label);
      marker = new google.maps.Marker(options);
      this.markers.push(marker);
      iw = this.infoWindow;
      map = this.googlemap;
      return google.maps.event.addListener(marker, 'click', function() {
        iw.setContent(infoHtml);
        return iw.open(map, marker);
      });
    };

    Map.prototype.addMarkerBySpace = function(space) {
      var info;
      info = "<p><a href=\"/space/view/" + space._id + "\">" + space.address + "</a><br>\n" + space.city + ", " + space.zip + "</p>";
      return this.addMarker(space.geo.lat, space.geo.lng, space.address, info);
    };

    Map.prototype.removeMarker = function(marker) {
      marker.setMap(null);
      return marker = null;
    };

    Map.prototype.makeMarkerOptions = function(lat, lng, label) {
      var options;
      return options = {
        position: this.makeLatLng(lat, lng),
        map: this.googlemap,
        title: label
      };
    };

    Map.prototype.makeLatLng = function(lat, lng) {
      return new google.maps.LatLng(lat, lng);
    };

    Map.prototype.getBounds = function() {
      return this.googlemap.getBounds();
    };

    return Map;

  })();

}).call(this);
